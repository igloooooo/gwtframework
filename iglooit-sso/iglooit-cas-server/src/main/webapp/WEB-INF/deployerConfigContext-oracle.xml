<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <bean id="authenticationManager"
          class="org.jasig.cas.authentication.AuthenticationManagerImpl">

        <property name="credentialsToPrincipalResolvers">
            <list>
                <bean class="org.jasig.cas.authentication.principal.UsernamePasswordCredentialsToPrincipalResolver">
                    <property name="attributeRepository">
                        <ref bean="attributeRepository"/>
                    </property>
                </bean>
                <bean class="org.jasig.cas.authentication.principal.HttpBasedServiceCredentialsToPrincipalResolver"/>
            </list>
        </property>

        <property name="authenticationHandlers">
            <list>
                <bean class="org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler"
                      p:httpClient-ref="httpClient"/>
                <bean class="com.clarity.sso.cas.ClarityUsernamePasswordAuthenticationHandler"/>
            </list>
        </property>
    </bean>

    <bean id="userDetailsService"
          class="org.springframework.security.cas.userdetails.GrantedAuthorityFromAssertionAttributesUserDetailsService">
        <constructor-arg>
            <list>
                <value>authorities</value>
            </list>
        </constructor-arg>
    </bean>

    <bean id="default-role" class="java.lang.String">
        <constructor-arg value="${cas.securityContext.serviceProperties.defaultUserRole}"/>
    </bean>

    <bean id="cas-admin-role" class="java.lang.String">
        <constructor-arg value="${cas.securityContext.serviceProperties.adminRoles}"/>
    </bean>

    <bean id="cas-admin-user" class="java.lang.String">
        <constructor-arg value="${cas.securityContext.serviceProperties.adminUser}"/>
    </bean>

    <bean id="defaultOrganization" class="java.lang.String">
        <constructor-arg value="${client.defaultAccount}"/>
    </bean>

    <!-- Custom: Load roles from Clarity database. -->
    <bean id="attributeRepository" class="com.clarity.sso.cas.ClarityPersonAttributeDao"/>
    <!-- DB: Load authorities from a DB table. -->
    <!--<bean id="attributeRepository" class="com.clarity.sso.cas.DatabasePersonAttributeAndRoleDao">
        <constructor-arg index="0" ref="usersDataSource" />
        <constructor-arg index="1" value="SELECT * FROM USER_DATA WHERE {0}" />
        <property name="authoritiesColumnName" value="roles"/>
        <property name="defaultRole">
            <bean class="org.springframework.security.core.authority.GrantedAuthorityImpl">
                <constructor-arg index="0" value="${cas.securityContext.serviceProperties.defaultUserRole}"/>
            </bean>
        </property>
        <property name="queryAttributeMapping">
            <map>
                <entry key="username" value="uid" />
            </map>
        </property>
        <property name="resultAttributeMapping">
            <map>
                <entry key="uid" value="username" />
                <entry key="email" value="email" />
                <entry key="roles" value="authorities" />
            </map>
        </property>
    </bean>
    <bean id="usersDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${users.database.driver.class}"/>
        <property name="jdbcUrl" value="${users.database.url}"/>
        <property name="user" value="${users.database.username}"/>
        <property name="password" value="${users.database.password}"/>
    </bean>-->

    <bean id="serviceRegistryDao" class="org.jasig.cas.services.JpaServiceRegistryDaoImpl"
          p:entityManagerFactory-ref="entityManagerFactory"/>
    <!-- This is the EntityManagerFactory configuration for Hibernate -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="casDataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
                <!-- Set this to false in the production environment. -->
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="auditTrailManager" class="com.github.inspektr.audit.support.Slf4jLoggingAuditTrailManager"/>

    <bean id="healthCheckMonitor" class="org.jasig.cas.monitor.HealthCheckMonitor">
      <property name="monitors">
        <list>
          <bean class="org.jasig.cas.monitor.MemoryMonitor"
              p:freeMemoryWarnThreshold="10" />
          <!--
            NOTE
            The following ticket registries support SessionMonitor:
              * DefaultTicketRegistry
              * JpaTicketRegistry
            Remove this monitor if you use an unsupported registry.
          -->
          <bean class="org.jasig.cas.monitor.SessionMonitor"
              p:ticketRegistry-ref="ticketRegistry"
              p:serviceTicketCountWarnThreshold="5000"
              p:sessionCountWarnThreshold="100000" />
        </list>
      </property>
    </bean>

    <bean id="casDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/casDS"/>
    </bean>

</beans>
